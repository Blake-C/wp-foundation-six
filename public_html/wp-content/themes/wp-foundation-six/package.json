{
  "name": "wp-foundation-six",
  "version": "0.0.0",
  "private": true,
  "engines": {
    "node": "14.16.0"
  },
  "browserslist": [
    "> 1% or last 3 versions"
  ],
  "scripts": {
    "clean": "rm -rf assets ../wp-foundation-six-build",
    "clean:styles": "rm -rf ./assets/css/*",
    "clean:scripts": "rm -rf ./assets/js/*",
    "clean:images": "rm -rf ./assets/images/*",
    "clean:static:assets": "rm -rf ./assets/fonts/* ./assets/icons/*",
    "scripts:prettier": "echo \"Starting Prettier on Scripts\" && prettier --write --loglevel warn \"./**/*.js\"",
    "scripts:webpack": "echo \"Starting Webpack\" && webpack --env output=\"./assets/js\"",
    "scripts:modernizr": "echo \"Starting Modernizr\" && modernizr -c modernizr-config.json -d ./assets/js/vendors/modernizr.js",
    "scripts:jquery": "cp ./node_modules/jquery/dist/jquery.min.js ./assets/js/vendors && cp ./node_modules/jquery/dist/jquery.min.map ./assets/js/vendors",
    "scripts:watch": "nodemon -e js --watch theme_components/js --exec \"npm run scripts && npx browser-sync reload\"",
    "scripts": "npm run clean:scripts && npm run scripts:prettier && npm run scripts:webpack && npm run scripts:modernizr && npm run scripts:jquery && echo \"Scripts Done\"",
    "styles:stylelint:check": "stylelint-config-prettier-check",
    "styles:prettier": "echo \"Starting Prettier on Styles\" && prettier --write --loglevel warn ./theme_components/sass/**/*.scss",
    "styles:stylelint": "echo \"Starting Stylelint\" && stylelint ./theme_components/sass/**/*.scss --fix",
    "styles:lint": "npm run styles:prettier && npm run styles:stylelint",
    "styles:sass": "echo \"Starting Styles Task\" && sass theme_components/sass/:assets/css --load-path=node_modules --style=compressed --no-error-css --charset",
    "styles:rename": " ls ./assets/css | grep -Ev \"\\.min.css|.map\" | xargs -I '{}' basename '{}' .css | xargs -I '{}' mv ./assets/css/{}.css ./assets/css/{}.min.css",
    "styles:postcss": "echo \"Starting Postcss\" && postcss ./assets/css/*.css --replace --verbose",
    "styles:cleanup": "find ./assets/css -type f \\( -iname '*.css.map' ! -iname \"*.min.*\" \\) -exec rm -rf {} \\;",
    "styles:watch": "nodemon -e scss --watch theme_components/sass --exec \"npm run styles && npx browser-sync reload\"",
    "styles": "npm run clean:styles && npm run styles:lint && npm run styles:sass && npm run styles:rename && npm run styles:postcss && npm run styles:cleanup && echo \"Styles Done\"",
    "static:assets:watch": "nodemon -e png,jpg,jpeg,gif,xml,svg,webmanifest,ico,ttf,otf,woff,eot,woff2 --watch theme_components/icons --watch theme_components/fonts --exec \"npm run static:assets && npx browser-sync reload\"",
    "static:assets": "cp -r ./theme_components/fonts ./assets/ && cp -r ./theme_components/icons ./assets/",
    "phpcs:lint": "php ../../../vendor/bin/phpcs",
    "phpcs:fix": "php ../../../vendor/bin/phpcbf",
    "phpcs:watch": "nodemon -e php --exec \"npm run phpcs && npx browser-sync reload\"",
    "phpcs": "echo \"Starting PHPCS & PHPCBF Tasks\" && npm run phpcs:fix && npm run phpcs:lint",
    "images:copy": "cp -r ./theme_components/images ./assets/",
    "images:mogrify:check": "command -v mogrify >/dev/null 2>&1 && npm run images:optimize || { echo \"Run 'brew install imagemagick' first. Or use your package manager to install imagemagick. Images will be copied but not optimized.\" >&2; return; }",
    "images:optimize": "find ./assets/images -type f | grep -E \"png|jpg|jpeg\" | xargs -I '{}' mogrify -strip -resize '1500x1500>' -quality 70 '{}'",
    "images:watch": "nodemon -e jpg,jpeg,png,gif --watch theme_components/images --exec \"npm run images && npx browser-sync reload\"",
    "images": "echo \"Starting Images Task\" && npm run clean:images && npm run images:copy && npm run images:mogrify:check",
    "build:message": "echo \"\nIt might appear as if the tasks are running out of order, \nbut they are running in parallel. This speeds up builds x2.\n\"",
    "build": "npm run build:message && npm run clean && mkdir -p ./assets/ && npm run static:assets & npm run scripts & npm run styles & npm run images & wait && echo \"Build Complete\"",
    "build:pro": "npm run build && mkdir -p ../wp-foundation-six-build && ls | grep -Ev \"node|gulp|workspace|webpack|postcss|package|modernizr|theme_components\" | xargs -I '{}' cp -r '{}' ../wp-foundation-six-build/",
    "livereload": "npx browser-sync start --no-notify --no-open --proxy 'http://localhost'",
    "serve": "npm run livereload & npm run watch",
    "watch:code": "npm run scripts:watch & npm run styles:watch",
    "watch:all": "npm run scripts:watch & npm run styles:watch & npm run static:assets:watch & npm run phpcs:watch & npm run images:watch",
    "watch": "npm run scripts:watch & npm run styles:watch & npm run static:assets:watch & npm run images:watch"
  },
  "devDependencies": {
    "@babel/core": "7.13.10",
    "@babel/preset-env": "7.13.10",
    "@babel/register": "7.13.8",
    "@wordpress/stylelint-config": "19.0.1",
    "autoprefixer": "10.2.5",
    "babel-loader": "^8.2.2",
    "core-js": "3.9.1",
    "cssnano": "4.1.10",
    "cssnano-preset-advanced": "4.0.7",
    "eslint": "7.22.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-prettier": "3.3.1",
    "eslint-webpack-plugin": "2.5.2",
    "nodemon": "2.0.7",
    "postcss": "8.2.8",
    "postcss-cli": "8.3.1",
    "prettier": "^2.2.1",
    "sass": "1.32.8",
    "stylelint": "13.12.0",
    "stylelint-config-prettier": "8.0.2",
    "stylelint-order": "^4.1.0",
    "webpack": "5.27.0",
    "webpack-cli": "4.5.0",
    "what-input": "5.2.10"
  },
  "dependencies": {
    "detect-browser": "^5.2.0",
    "foundation-sites": "6.6.3",
    "jquery": "3.6.0",
    "jquery-migrate": "^3.3.2",
    "modernizr": "3.11.6"
  }
}
